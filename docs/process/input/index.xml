<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>การนำเข้าข้อมูล on การเขียนโปรแกรมประมวลผลข้อมูล</title>
    <link>https://jittat.github.io/data-examples/process/input/</link>
    <description>Recent content in การนำเข้าข้อมูล on การเขียนโปรแกรมประมวลผลข้อมูล</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>th</language>
    <lastBuildDate>Mon, 19 Feb 2018 00:36:04 +0700</lastBuildDate>
    
	<atom:link href="https://jittat.github.io/data-examples/process/input/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ไพธอนมาตรฐาน</title>
      <link>https://jittat.github.io/data-examples/process/input/input-python-std/</link>
      <pubDate>Sat, 17 Feb 2018 23:29:54 +0700</pubDate>
      
      <guid>https://jittat.github.io/data-examples/process/input/input-python-std/</guid>
      <description>การนำเข้าข้อมูลจากไฟล์ csv การนำเข้าข้อมูลจากไฟล์ csv สามารถทำได้โดยใช้ library csv ในไพธอน ผลลัพธ์จากการอ่านมีได้หลายแบบ
อ่านข้อมูลทีละบรรทัดเป็น list ตัวอย่างด้านล่างแสดงการอ่านไฟล์ scores.csv ทีละบรรทัดออกมาเป็นรายการ (list) และพิมพ์ออกมา
import csv csvfile = open(&amp;#39;scores.csv&amp;#39;) reader = csv.reader(csvfile) for row in reader: print(row) csvfile.close() ผลลัพธ์
[&#39;name&#39;, &#39;score&#39;] [&#39;สมชาย&#39;, &#39;50&#39;] [&#39;สมหญิง&#39;, &#39;45&#39;] [&#39;สมศักดิ์&#39;, &#39;80&#39;] [&#39;ประวิทย์&#39;, &#39;78&#39;] [&#39;ประมาณ&#39;, &#39;56&#39;]  อ่านข้อมูลทีละบรรทัดเป็น dict import csv csvfile = open(&amp;#39;scores.csv&amp;#39;) reader = csv.DictReader(csvfile) for row in reader: print(row) csvfile.close() ผลลัพธ์
{&#39;name&#39;: &#39;สมชาย&#39;, &#39;score&#39;: &#39;50&#39;} {&#39;name&#39;: &#39;สมหญิง&#39;, &#39;score&#39;: &#39;45&#39;} {&#39;name&#39;: &#39;สมศักดิ์&#39;, &#39;score&#39;: &#39;80&#39;} {&#39;name&#39;: &#39;ประวิทย์&#39;, &#39;score&#39;: &#39;78&#39;} {&#39;name&#39;: &#39;ประมาณ&#39;, &#39;score&#39;: &#39;56&#39;}  อ่านข้อมูลทั้งหมดจากนั้นคืนรายการที่เป็น dict ด้านล่างเป็นฟังก์ชัน read_csv_data ที่คืนค่าเป็น list ของ dict ที่สามารถนำไปใช้ต่อได้เลย และตัวอย่างการใช้งาน</description>
    </item>
    
  </channel>
</rss>